package com.bp;

import java.util.ArrayList;

/**
 * 완전 탐색(Brute Force)
 * 컴퓨터의 빠른 계산 능력을 이용하여 모든 경우의 수를 전부 탐색하는 방법
 * 
 *
 * 문제 설명
 * 수포자 삼인방은 모의고사에 수학 문제를 전부 찍으려 합니다.
 * 수포자는 1번 문제부터 마지막 문제까지 다음과 같이 찍습니다.
 * 
 * 1번 수포자가 찍는 방식: 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, ...
 * 2번 수포자가 찍는 방식: 2, 1, 2, 3, 2, 4, 2, 5, 2, 1, 2, 3, 2, 4, 2, 5, ...
 * 3번 수포자가 찍는 방식: 3, 3, 1, 1, 2, 2, 4, 4, 5, 5, 3, 3, 1, 1, 2, 2, 4, 4, 5, 5, ...
 * 
 * 1번 문제부터 마지막 문제까지의 정답이 순서대로 들은 배열 answers가 주어졌을 때, 
 * 가장 많은 문제를 맞힌 사람이 누구인지 배열에 담아 return 하도록 solution 함수를 작성해주세요.
 *
 * 시험은 최대 10,000 문제로 구성되어있습니다.
 * 문제의 정답은 1, 2, 3, 4, 5중 하나입니다.
 * 가장 높은 점수를 받은 사람이 여럿일 경우, return하는 값을 오름차순 정렬해주세요.
 *
 */
public class BruteForce1 {

	public static void main(String[] args) {

		int[] answer = {1,2,3,4,5};
		new BruteForce1().solution(answer);
	}
	
	public int[] solution(int[] answer) {
        
        int[] a = {1,2,3,4,5};
        int[] b = {2,1,2,3,2,4,2,5};
        int[] c = {3,3,1,1,2,2,4,4,5,5};
        
        int[] score = new int[3];
        
        			 //문제 개수
        for(int i=0; i<answer.length; i++) {
        	if(answer[i] == a[i%a.length])
        		score[0]++;
        	if(answer[i] == b[i%b.length])
        		score[1]++;
        	if(answer[i] == c[i%c.length])
        		score[2]++;
        }
        
        //가장 큰 수 찾기
        int maxScore = Math.max(score[0], Math.max(score[1], score[2]));
        ArrayList<Integer> list = new ArrayList<>();
        if(maxScore == score[0])
        	list.add(1);
        if(maxScore == score[1])
        	list.add(2);
        if(maxScore == score[1])
        	list.add(3);

        return list.stream().mapToInt(i->i.intValue()).toArray();
    }

}
